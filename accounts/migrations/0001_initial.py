# Generated by Django 4.1.2 on 2022-10-05 14:44

import accounts.models.user
import accounts.validators
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='고유식별자')),
                ('gender', models.CharField(choices=[('MALE', '남자'), ('FEMALE', '여자')], default='MALE', help_text='성별입니다. 남, 여', max_length=9, verbose_name='성별')),
                ('birthdate', models.CharField(blank=True, help_text='생년월일 8자리를 입력하세요.', max_length=8, null=True, verbose_name='생년월일')),
                ('postal_code', models.CharField(blank=True, max_length=20, verbose_name='우편번호')),
                ('address', models.CharField(blank=True, max_length=100, verbose_name='주소')),
                ('detail_address', models.CharField(blank=True, max_length=100, verbose_name='상세주소')),
                ('phone', models.CharField(blank=True, help_text='- 를 제외한 번호만 입력하세요.', max_length=11, validators=[accounts.validators.validate_phone_length], verbose_name='휴대폰')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to=accounts.models.user.profile_upload_to, verbose_name='프로필 이미지')),
                ('last_login_ip', models.GenericIPAddressField(blank=True, editable=False, help_text='최근 로그인된 IP 입니다.', null=True, verbose_name='마지막 로그인 IP')),
                ('sign_up_ip', models.GenericIPAddressField(blank=True, editable=False, help_text='가입한 IP 입니다.', null=True, verbose_name='가입 IP')),
                ('terms_of_service_is_agreed', models.BooleanField(blank=True, null=True, verbose_name='서비스 이용약관 동의 여부')),
                ('terms_of_service_agreed_at', models.DateTimeField(blank=True, null=True, verbose_name='서비스 이용약관 동의일')),
                ('personal_info_is_agreed', models.BooleanField(blank=True, null=True, verbose_name='개인정보 동의 여부')),
                ('personal_info_agreed_at', models.DateTimeField(blank=True, null=True, verbose_name='개인정보 동의일')),
                ('marketing_is_agreed', models.BooleanField(blank=True, default=False, null=True, verbose_name='마케팅 수신 동의 여부')),
                ('marketing_agreed_at', models.DateTimeField(blank=True, null=True, verbose_name='마케팅 수신 동의일')),
                ('password_changed_at', models.DateTimeField(blank=True, null=True, verbose_name='비밀번호 변경일')),
                ('password_fail_count', models.SmallIntegerField(blank=True, null=True, verbose_name='비밀번호 실패 횟수')),
                ('is_sign_out', models.BooleanField(blank=True, default=False, verbose_name='회원탈퇴 여부')),
                ('sign_out_date', models.DateTimeField(blank=True, null=True, verbose_name='회원탈퇴일')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='사용자 정보 수정일입니다.', null=True, verbose_name='수정일')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '사용자',
                'verbose_name_plural': '사용자',
                'db_table': 'users_tb',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(editable=False, max_length=40, verbose_name='세션 키')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='사용자')),
            ],
            options={
                'verbose_name': '사용자 세션',
                'verbose_name_plural': '사용자 세션',
                'db_table': 'user_session_tb',
            },
        ),
        migrations.CreateModel(
            name='ShippingAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='성')),
                ('last_name', models.CharField(max_length=50, verbose_name='이름')),
                ('postal_code', models.CharField(max_length=20, verbose_name='우편번호')),
                ('address', models.CharField(max_length=100, verbose_name='주소')),
                ('detail_address', models.CharField(max_length=100, verbose_name='상세주소')),
                ('email', models.EmailField(max_length=254, verbose_name='email')),
                ('phone', models.CharField(max_length=11, validators=[accounts.validators.validate_phone_length], verbose_name='전화번호')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='사용자')),
            ],
            options={
                'verbose_name': '배송지 정보',
                'verbose_name_plural': '배송지 정보',
                'db_table': 'shipping_address_tb',
            },
        ),
    ]
